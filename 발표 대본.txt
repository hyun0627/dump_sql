목차
1. 프로그램 개요

2. 프로젝트 팀 구성
- ppt보고 발표
- 주요 기능 또는 수행 경과에서 말할거
3. 프로젝트 수행 절차 및 방법
- ppt보고 발표

4. 프로젝트 수행 경과
- 아래 클래스 세부 사항
5. 자체 평가 의견

6. 사용자 인터페이스

추가) 클래스 세부 사항(주요 기능 페이지에서 말하든가, 수행 경과에서 말하든가 맘대로)
Book클래스(도서 정보 관리)
- 책 등록
  -> 제목, isbn번호, 가격, 출판사, 출판연도, 저자, 수량을 입력받아 insert문에 전달, 그 후 executeUpdate로 DB에 전달
  -> id같은 경우에 auto_increment가 없어도 입력받지 않는데 그 이유는 매번 Max(id)를 받아 id에 저장 후 insert문에 사용
    나머지는 입력받아 유효성 검사를 진행 후 true면 insert문에 전달

- 책 목록
  - 전체
     -> 테이블 내에 모든 데이터 출력 
  - 제목
     -> 찾을 책의 제목 입력 -> like 이용해서 입력한 값이 포함되어있는 책들 리스트 출력 
  - 저자명
     -> 찾을 책의 저자 입력 -> like 이용해서 입력한 값이 포함되어있는 저자 데이터를 지닌 책들 리스트 출력
  - 출판사
     -> 찾을 책의 출판사 입력 -> like 이용해서 입력한 값이 포함되어있는 출판사 데이터를 지닌 책들 리스트 출력

- 책 수정
   - 수정할 책 제목으로 검색
     -> 수정할 책의 제목 입력 -> like 이용, 입력한 값이 포함되어있는 책들 리스트 출력
     -> 그 책들 중 수정할 책의 id입력 -> 그 책의 데이터 수정
   - 수정할 책 저자명으로 검색
     -> 수정할 책의 저자 입력 -> like 이용, 책들 리스트 출력 -> 책들 중 수정할 책의 id입력 -> 그 책의 데이터 수정
   - 수정할 책 출판사로 검색
     -> 수정할 책의 출판사 입력 -> like 이용, 책들 리스트 출력 -> 책들 중 수정할 책의 id입력 -> 그 책의 데이터 수정

- 책 제거
   - 삭제할 책 제목으로 검색
     -> 삭제할 책의 제목 입력 -> like 이용, 입력한 값이 포함되어있는 책들 리스트 출력
     -> 그 책들 중 삭제할 책의 id입력 -> 그 책의 데이터 삭제
   - 삭제할 책 저자명으로 검색
     -> 삭제할 책의 저자 입력 -> like 이용, 책들 리스트 출력 -> 책들 중 삭제할 책의 id입력 -> 그 책의 데이터 삭제
   - 삭제할 책 출판사로 검색
      -> 삭제할 책의 출판사 입력 -> like 이용, 책들 리스트 출력 -> 책들 중 삭제할 책의 id입력 -> 그 책의 데이터 삭제

Member클래스(세부사항)
- 사람 정보 추가
   -> 테이블의 count확인 -> 0이면 데이터가 없다는 뜻이므로 count가 id에 1을 추가 한 후 insert에 전달
   -> 아니면 Max(id)를 이용해 id의 최댓값에 1을 더해 insert문에 전달
   -> 이름, 유저 아이디, 성별, 모바일 번호, 비밀번호, 입력 
   -> 이때 아이디나 모바일 번호 같은 경우에는 똑같은 값이 있는지 확인 후 없으면 insert문에 전달
   -> 이렇게 값을 다 입력받은 후에 문제가 없을경우 insert문에 전달 후 executeUpdate 실행

- 사람 정보 출력
   - 이름
      -> 출력하고 싶은 사람의 이름 입력 -> 그 이름이 포함된 사람의 데이터를 출력
   - 유저아이디
      -> 출력하고 싶은 사람의 아이디 입력 -> 그 아이디가 포함된 사람의 데이터를 출력
   - 모바일번호
      -> 출력하고 싶은 사람의 모바일번호 입력 -> 그 아이디가 포함된 사람의 데이터를 출력

- 사람 정보 수정
   - 이름
      -> 수정하고 싶은 사람의 이름 입력 -> 그 이름이 포함된 사람의 데이터를 출력하고 수정 시작
      -> 이때 수정메소드에서는 y값을 입력하면 이전에 쓰던값 그대로 쓰고 아니면 새 값을 입력받음
   - 유저아이디
      -> 수정하고 싶은 사람의 아이디 입력 -> 그 아이디가 포함된 사람의 데이터를 출력하고 수정 시작
      -> 수정메소드에서는 y를 입력하면 이전에 쓰던 값 그대로, 아니면 새 값을 입력받아 update문에 전달
   - 모바일번호
      -> 수정하고 싶은 사람의 모바일번호 입력 -> 그 모바일번호가 포함된 사람의 데이터를 출력하고 수정 시작
      -> 수정메소드에서는 y를 입력하면 이전에 쓰던 값 그대로, 아니면 새 값을 입력받아 update문에 전달

- 사람 정보 삭제
   - 찾는 방법: 이름, 아이디, 모바일 번호
      -> 값을 입력 -> 찾고 싶은 방법에 따라 데이터 출력 -> (이름, 아이디, 모바일번호) 에 해당하는 데이터 삭제

Rent클래스(세부사항)
- 책 대여
  -> 로그인 메소드 실행(id,pw가 맞는지 확인) -> 로그인이 성공하면 빌릴 책 이름 입력 
  -> 그 이름이 포함된 책들리스트 출력 -> 그 리스트 중 빌리고 싶은 책의 index번호와 수량 입력
  -> insert문으로 전달 후 executeUpdate 실행
     (이때 만약 빌리고 싶은 책의 수량이 0이면 빌리지 못하게 구현, 1 이상이여야 빌리기 가능)
  -> 책 반납 만기 날짜는 책을 빌린 날로부터 2주 후로 설정

- 대여 연장(연장을 하게 되면 반납 만기 날짜가 2주 연장됨)
   -> 연장을 할건지 물어보고 연장을 한다고 한다면 로그인 메소드 실행 -> 그 로그인 한 사람의 대출 리스트 출력
   -> 일괄 연장을 할지 안할지 선택 -> 일괄연장을 한다면 모든 책 연장 
   -> 아니라면 그 책들 중 대출 연장하고 싶은 책을 선택 -> 원하는 책만 연장

- 책 반납
   -> 책 반납할지 한번 더 물어보고 반납한다고 한다면 로그인 메소드 실행
   -> 로그인 한 사람의 대출 리스트 출력 -> 반납할 책 한권씩 선택 후 그 책을 데이터에서 delete함
      (이때, delete하기 전에 수량을 변수에 저장해놓았다가 delete하고 Book테이블에 저장해놓은 수량을 추가함)

- 대여 정보 출력
  - 전체 출력
     -> Rent테이블의 모든 내용 출력
  - 선택 출력(이름, 아이디)
     - 이름
        -> 출력하고 싶은 사람의 이름 입력 -> 그 이름에 해당하는 사람들 출력(동명이인 포함)
        -> 동명이인이 있을 수도 있으므로 그 출력한 사람들 중 어떤 사람을 보고 싶은지 index번호 입력
        -> 그 index번호에 해당하는 사람 출력
     - 아이디
        -> 출력하고 싶은 사람의 아이디 입력 -> 그 아이디에 해당하는 사람의 데이터 출력
            (이때 아이디는 PrimaryKey(기본키) 이므로 다른 사람이 없으므로 바로 그 사람의 데이터 출력)

데이터베이스 관리에서 말할거
Book 테이블
- id : index용도, auto_increment가 없다
- isbn : 기본키(기본키로 선정한 이유: 테이블 내 다른 컬럼들보다 중복된 값이 없을 확률이 높아보였기에)
- title : not null(책 제목이 없으면 안된다라고 생각했기에)

Member 테이블
- id : index용도, auto_increment가 없다
- pname : 사람 이름, 책의 title 처럼 중요하다고 생각해 not null로 선정
- userid : 개인 아이디, 기본키(기본키로 선정한 이유: 이름이나 모바일번호는 동일한 데이터가 생길 수도 있기에)
                                    (기본키로 설정했기에 자바에서 새로운 데이터 입력할때 동일한 아이디로 하면 break발생)
- id : 기본키
- book_id : Book테이블의 isbn번호를 references(참조) 하는 외래키
- member_id : Member테이블의 userid를 references(참조)하는 외래키
- expirydate : 반납 만기 날짜 